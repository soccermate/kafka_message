[2022-10-10 08:22:31,508] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-10-10 08:22:31,590] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2022-10-10 08:22:31,605] INFO [Controller id=1] Creating FeatureZNode at path: /feature with contents: FeatureZNode(Enabled,Features{}) (kafka.controller.KafkaController)
[2022-10-10 08:22:31,665] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
[2022-10-10 08:22:31,677] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
[2022-10-10 08:22:31,685] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
[2022-10-10 08:22:31,689] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
[2022-10-10 08:22:31,712] INFO [Controller id=1] Initialized broker epochs cache: Map(1 -> 49, 0 -> 50) (kafka.controller.KafkaController)
[2022-10-10 08:22:31,738] DEBUG [Controller id=1] Register BrokerModifications handler for Set(1, 0) (kafka.controller.KafkaController)
[2022-10-10 08:22:31,754] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2022-10-10 08:22:31,760] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2022-10-10 08:22:31,764] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2022-10-10 08:22:31,764] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2022-10-10 08:22:31,764] INFO [Controller id=1] Currently active brokers in the cluster: Set(1, 0) (kafka.controller.KafkaController)
[2022-10-10 08:22:31,765] INFO [Controller id=1] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2022-10-10 08:22:31,765] INFO [Controller id=1] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2022-10-10 08:22:31,765] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2022-10-10 08:22:31,768] INFO [Controller id=1] List of topics to be deleted:  (kafka.controller.KafkaController)
[2022-10-10 08:22:31,768] INFO [Controller id=1] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2022-10-10 08:22:31,768] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
[2022-10-10 08:22:31,768] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2022-10-10 08:22:31,768] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
[2022-10-10 08:22:31,784] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2022-10-10 08:22:31,784] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-10-10 08:22:31,788] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-10-10 08:22:31,789] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> Map() (kafka.controller.ZkReplicaStateMachine)
[2022-10-10 08:22:31,789] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2022-10-10 08:22:31,790] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2022-10-10 08:22:31,801] INFO [RequestSendThread controllerId=1] Controller 1 connected to localhost:9093 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-10-10 08:22:31,801] INFO [RequestSendThread controllerId=1] Controller 1 connected to localhost:9092 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-10-10 08:22:31,801] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> Map() (kafka.controller.ZkPartitionStateMachine)
[2022-10-10 08:22:31,807] INFO [Controller id=1] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2022-10-10 08:22:31,814] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2022-10-10 08:22:31,815] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2022-10-10 08:22:31,815] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2022-10-10 08:22:31,815] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2022-10-10 08:22:31,817] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2022-10-10 08:22:31,856] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
[2022-10-10 08:22:32,245] INFO [Controller id=1] New topics: [Set(user_created)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(user_created,Some(hiAp7aJXRw6Zf8RkDG-ckw),Map(user_created-0 -> ReplicaAssignment(replicas=0,1, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-10-10 08:22:32,246] INFO [Controller id=1] New partition creation callback for user_created-0 (kafka.controller.KafkaController)
[2022-10-10 08:22:36,861] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-10-10 08:22:36,863] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-10-10 08:22:36,870] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-10-10 08:22:36,878] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-10-10 08:23:05,926] INFO [Controller id=1] New topics: [Set(__consumer_offsets)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(__consumer_offsets,Some(HQLu6zr-QcOiv2UBsU2Viw),Map(__consumer_offsets-22 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-10-10 08:23:05,926] INFO [Controller id=1] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-37,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-38,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-13,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2022-10-10 08:27:36,872] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-10-10 08:27:36,874] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-10-10 08:27:36,890] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-10-10 08:27:36,891] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-10-10 08:27:36,891] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-10-10 08:27:36,892] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-10-10 08:32:36,887] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-10-10 08:32:36,897] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-10-10 08:32:36,910] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-10-10 08:32:36,911] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-10-10 08:32:36,911] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-10-10 08:32:36,911] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-10-10 08:37:36,913] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-10-10 08:37:36,916] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-10-10 08:37:36,929] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-10-10 08:37:36,930] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-10-10 08:37:36,930] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-10-10 08:37:36,930] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-10-10 08:42:37,003] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-10-10 08:42:37,005] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-10-10 08:42:37,014] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-10-10 08:42:37,015] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-10-10 08:42:37,016] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-10-10 08:42:37,016] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-10-10 08:47:37,012] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-10-10 08:47:37,014] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-10-10 08:47:37,028] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-10-10 08:47:37,029] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-10-10 08:47:37,029] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-10-10 08:47:37,030] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-10-10 08:52:37,029] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-10-10 08:52:37,035] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-10-10 08:52:37,054] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-10-10 08:52:37,054] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-10-10 08:52:37,056] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-10-10 08:52:37,056] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-10-10 08:57:37,076] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-10-10 08:57:37,077] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-10-10 08:57:37,084] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-10-10 08:57:37,085] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-10-10 08:57:37,085] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-10-10 08:57:37,085] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)

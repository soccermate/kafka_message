[2022-10-01 21:22:53,116] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-10-01 21:22:53,177] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2022-10-01 21:22:53,187] INFO [Controller id=0] Creating FeatureZNode at path: /feature with contents: FeatureZNode(Enabled,Features{}) (kafka.controller.KafkaController)
[2022-10-01 21:22:53,236] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2022-10-01 21:22:53,244] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2022-10-01 21:22:53,254] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2022-10-01 21:22:53,263] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2022-10-01 21:22:53,282] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 25) (kafka.controller.KafkaController)
[2022-10-01 21:22:53,297] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2022-10-01 21:22:53,305] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2022-10-01 21:22:53,323] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-10-01 21:22:53,323] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2022-10-01 21:22:53,324] INFO [Controller id=0] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2022-10-01 21:22:53,324] INFO [Controller id=0] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2022-10-01 21:22:53,324] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2022-10-01 21:22:53,326] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2022-10-01 21:22:53,327] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2022-10-01 21:22:53,327] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2022-10-01 21:22:53,327] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2022-10-01 21:22:53,327] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2022-10-01 21:22:53,338] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2022-10-01 21:22:53,339] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-10-01 21:22:53,351] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-10-01 21:22:53,352] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> Map() (kafka.controller.ZkReplicaStateMachine)
[2022-10-01 21:22:53,354] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2022-10-01 21:22:53,355] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2022-10-01 21:22:53,357] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> Map() (kafka.controller.ZkPartitionStateMachine)
[2022-10-01 21:22:53,358] INFO [RequestSendThread controllerId=0] Controller 0 connected to localhost:9093 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-10-01 21:22:53,359] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2022-10-01 21:22:53,380] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2022-10-01 21:22:53,380] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2022-10-01 21:22:53,380] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2022-10-01 21:22:53,380] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2022-10-01 21:22:53,382] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2022-10-01 21:22:53,408] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2022-10-01 21:22:58,426] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-10-01 21:22:58,427] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-10-01 21:23:16,206] INFO [Controller id=0] Newly added brokers: 1, deleted brokers: , bounced brokers: , all live brokers: 0,1 (kafka.controller.KafkaController)
[2022-10-01 21:23:16,207] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2022-10-01 21:23:16,216] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-10-01 21:23:16,217] INFO [Controller id=0] New broker startup callback for 1 (kafka.controller.KafkaController)
[2022-10-01 21:23:16,237] DEBUG [Controller id=0] Register BrokerModifications handler for Vector(1) (kafka.controller.KafkaController)
[2022-10-01 21:23:16,247] INFO [Controller id=0] Updated broker epochs cache: Map(1 -> 45, 0 -> 25) (kafka.controller.KafkaController)
[2022-10-01 21:23:16,250] INFO [RequestSendThread controllerId=0] Controller 0 connected to localhost:9092 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-10-01 21:23:16,276] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-10-01 21:23:16,290] DEBUG [Controller id=1] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-10-01 21:23:49,703] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2022-10-01 21:23:49,704] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2022-10-01 21:23:49,704] DEBUG [Controller id=0] Live brokers: 1 (kafka.controller.KafkaController)
[2022-10-01 21:23:49,706] TRACE [Controller id=0] All leaders =  (kafka.controller.KafkaController)
[2022-10-01 21:23:49,711] INFO [Controller id=0] Shutting down broker 1 (kafka.controller.KafkaController)
[2022-10-01 21:23:49,713] DEBUG [Controller id=0] All shutting down brokers: 0,1 (kafka.controller.KafkaController)
[2022-10-01 21:23:49,713] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2022-10-01 21:23:49,714] TRACE [Controller id=0] All leaders =  (kafka.controller.KafkaController)
[2022-10-01 21:23:49,842] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-10-01 21:23:49,842] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-10-01 21:23:49,842] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-10-01 21:23:49,843] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2022-10-01 21:23:49,843] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(1, 0) (kafka.controller.KafkaController)
[2022-10-01 21:23:49,843] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-10-01 21:23:49,844] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-10-01 21:23:49,844] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2022-10-01 21:23:49,844] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2022-10-01 21:23:49,844] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2022-10-01 21:23:49,847] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2022-10-01 21:23:49,863] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2022-10-01 21:23:49,863] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2022-10-01 21:23:49,866] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2022-10-01 21:23:49,884] INFO [ControllerEventThread controllerId=1] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-10-01 21:23:49,884] INFO [ControllerEventThread controllerId=1] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-10-01 21:23:49,884] INFO [ControllerEventThread controllerId=1] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-10-01 21:23:49,885] DEBUG [Controller id=1] Resigning (kafka.controller.KafkaController)
[2022-10-01 21:23:49,885] DEBUG [Controller id=1] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2022-10-01 21:23:49,886] INFO [PartitionStateMachine controllerId=1] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-10-01 21:23:49,886] INFO [ReplicaStateMachine controllerId=1] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-10-01 21:23:49,888] INFO [Controller id=1] Resigned (kafka.controller.KafkaController)
[2022-10-01 21:26:36,409] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-10-01 21:26:36,471] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 2 and epoch zk version is now 2 (kafka.controller.KafkaController)
[2022-10-01 21:26:36,488] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
[2022-10-01 21:26:36,496] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
[2022-10-01 21:26:36,503] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
[2022-10-01 21:26:36,505] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
[2022-10-01 21:26:36,525] INFO [Controller id=1] Initialized broker epochs cache: Map(1 -> 112) (kafka.controller.KafkaController)
[2022-10-01 21:26:36,538] DEBUG [Controller id=1] Register BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2022-10-01 21:26:36,547] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2022-10-01 21:26:36,561] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2022-10-01 21:26:36,561] INFO [Controller id=1] Currently active brokers in the cluster: Set(1) (kafka.controller.KafkaController)
[2022-10-01 21:26:36,562] INFO [Controller id=1] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2022-10-01 21:26:36,562] INFO [Controller id=1] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2022-10-01 21:26:36,562] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2022-10-01 21:26:36,571] INFO [Controller id=1] List of topics to be deleted:  (kafka.controller.KafkaController)
[2022-10-01 21:26:36,571] INFO [Controller id=1] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2022-10-01 21:26:36,571] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
[2022-10-01 21:26:36,571] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2022-10-01 21:26:36,572] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
[2022-10-01 21:26:36,598] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2022-10-01 21:26:36,598] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-10-01 21:26:36,600] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-10-01 21:26:36,603] INFO [RequestSendThread controllerId=1] Controller 1 connected to localhost:9092 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-10-01 21:26:36,617] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> Map() (kafka.controller.ZkReplicaStateMachine)
[2022-10-01 21:26:36,618] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2022-10-01 21:26:36,618] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2022-10-01 21:26:36,619] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> Map() (kafka.controller.ZkPartitionStateMachine)
[2022-10-01 21:26:36,619] INFO [Controller id=1] Ready to serve as the new controller with epoch 2 (kafka.controller.KafkaController)
[2022-10-01 21:26:36,632] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2022-10-01 21:26:36,632] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2022-10-01 21:26:36,632] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2022-10-01 21:26:36,632] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2022-10-01 21:26:36,633] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2022-10-01 21:26:36,664] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
[2022-10-01 21:26:36,720] INFO [Controller id=1] Newly added brokers: 0, deleted brokers: , bounced brokers: , all live brokers: 0,1 (kafka.controller.KafkaController)
[2022-10-01 21:26:36,721] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2022-10-01 21:26:36,726] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2022-10-01 21:26:36,727] INFO [Controller id=1] New broker startup callback for 0 (kafka.controller.KafkaController)
[2022-10-01 21:26:36,730] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-10-01 21:26:36,733] INFO [RequestSendThread controllerId=1] Controller 1 connected to localhost:9093 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-10-01 21:26:36,734] DEBUG [Controller id=1] Register BrokerModifications handler for Vector(0) (kafka.controller.KafkaController)
[2022-10-01 21:26:36,743] INFO [Controller id=1] Updated broker epochs cache: Map(1 -> 112, 0 -> 114) (kafka.controller.KafkaController)
[2022-10-01 21:26:36,752] DEBUG [Controller id=0] Broker 1 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-10-01 21:26:41,691] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-10-01 21:26:41,693] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-10-01 21:27:58,414] INFO [Controller id=1] New topics: [Set(user_created)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(user_created,Some(NIDOCBnHQn6paPSX9XYmMQ),Map(user_created-0 -> ReplicaAssignment(replicas=1,0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-10-01 21:27:58,416] INFO [Controller id=1] New partition creation callback for user_created-0 (kafka.controller.KafkaController)
[2022-10-01 21:28:43,188] INFO [Controller id=1] New topics: [Set(__consumer_offsets)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(__consumer_offsets,Some(lNn9eoX6RJ6n_dnRJfWWdA),Map(__consumer_offsets-22 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-10-01 21:28:43,189] INFO [Controller id=1] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-37,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-38,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-13,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2022-10-01 21:31:41,688] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-10-01 21:31:41,706] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-10-01 21:31:41,733] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-10-01 21:31:41,737] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-10-01 21:31:41,737] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-10-01 21:31:41,737] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-10-01 21:36:41,748] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-10-01 21:36:41,755] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-10-01 21:36:41,778] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-10-01 21:36:41,779] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-10-01 21:36:41,780] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-10-01 21:36:41,780] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-10-01 21:41:41,772] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-10-01 21:41:41,775] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-10-01 21:41:41,789] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-10-01 21:41:41,790] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-10-01 21:41:41,791] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-10-01 21:41:41,791] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-10-01 21:46:41,797] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-10-01 21:46:41,799] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-10-01 21:46:41,814] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-10-01 21:46:41,814] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-10-01 21:46:41,815] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-10-01 21:46:41,815] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-10-01 21:51:41,803] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-10-01 21:51:41,810] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-10-01 21:51:41,832] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-10-01 21:51:41,832] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-10-01 21:51:41,832] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-10-01 21:51:41,832] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-10-01 21:56:41,823] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-10-01 21:56:41,825] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-10-01 21:56:41,835] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-10-01 21:56:41,836] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-10-01 21:56:41,836] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-10-01 21:56:41,836] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
